{
  "stats": {
    "suites": 6,
    "tests": 11,
    "passes": 8,
    "pending": 0,
    "failures": 3,
    "start": "2025-08-25T11:45:25.295Z",
    "end": "2025-08-25T11:48:02.376Z",
    "duration": 157081,
    "testsRegistered": 11,
    "passPercent": 72.72727272727273,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e9c7da22-eaa8-4c43-a288-1874a9415fb4",
      "title": "",
      "fullFile": "cypress/e2e/component-functionality.cy.js",
      "file": "cypress/e2e/component-functionality.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3670aeb5-cd40-4240-b574-fe87475e9ea5",
          "title": "Component Functionality Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "df80dd96-2bc0-4c73-9d87-cabe6ee2cf87",
              "title": "Job Manager Component",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new job successfully",
                  "fullTitle": "Component Functionality Tests Job Manager Component should create a new job successfully",
                  "timedOut": null,
                  "duration": 14513,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Use generic Add button (migrated UI)\ncy.get('#add-item-btn').should('be.visible').click();\ncy.openModal('form-modal');\n// Fill job form using form field names\ncy.fixture('test-data').then(testData => {\n  const job = testData.formTestData.validJob;\n  cy.get('#form-modal').within(() => {\n    cy.get('form [name=\"company\"]').clear().type(job.company);\n    cy.get('form [name=\"position\"]').clear().type(job.position);\n    cy.get('form [name=\"location\"]').clear().type(job.location);\n    cy.get('form [name=\"description\"]').clear().type(job.description || '');\n    cy.get('form [name=\"url\"]').clear().type(job.url || '');\n  });\n});\ncy.takeNamedScreenshot('job-manager-create-job');\n// Save job (generic form save)\ncy.get('#form-save').click();\n// Verify job appears in list (card renderer uses .item-card)\ncy.get('.item-card').should('contain.text', 'Test Company');\ncy.takeNamedScreenshot('job-manager-job-created');",
                  "err": {},
                  "uuid": "3b0e477d-fcc8-4482-b5cb-de1045a507ad",
                  "parentUUID": "df80dd96-2bc0-4c73-9d87-cabe6ee2cf87",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should update job status",
                  "fullTitle": "Component Functionality Tests Job Manager Component should update job status",
                  "timedOut": null,
                  "duration": 9354,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "// Seed test data first\ncy.fixture('test-data').then(testData => {\n  cy.seedJobData([testData.testJobs[0]]);\n});\ncy.visitJobsApp('new');\ncy.waitForStore();\n// Click on job to open details (cards are .item-card)\ncy.get('.item-card').first().click();\n// Wait for details panel status select to appear and change it\ncy.get('#details-content').find('[name=\"status\"]', {\n  timeout: 10000\n}).should('exist').select('interviewing');\ncy.takeNamedScreenshot('job-manager-status-change');\n// Verify status updated in select and on card badges\ncy.get('#details-content').find('[name=\"status\"]').should('have.value', 'interviewing');\n// Ensure at least one rendered item card shows the updated status badge\ncy.get('.item-card').then(cards => {\n  const matchCount = [...cards].filter(c => {\n    var _c$querySelector;\n    return ((_c$querySelector = c.querySelector('.status-badge')) === null || _c$querySelector === void 0 || (_c$querySelector = _c$querySelector.textContent) === null || _c$querySelector === void 0 ? void 0 : _c$querySelector.trim()) === 'interviewing';\n  }).length;\n  expect(matchCount).to.be.greaterThan(0);\n});",
                  "err": {
                    "message": "AssertionError: expected 0 to be above 0",
                    "estack": "AssertionError: expected 0 to be above 0\n    at Context.eval (webpack://job-hunt-manager/./cypress/e2e/component-functionality.cy.js:57:33)",
                    "diff": ""
                  },
                  "uuid": "d95d53c5-fde5-4142-b519-bacc4f072999",
                  "parentUUID": "df80dd96-2bc0-4c73-9d87-cabe6ee2cf87",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should filter jobs by status",
                  "fullTitle": "Component Functionality Tests Job Manager Component should filter jobs by status",
                  "timedOut": null,
                  "duration": 7968,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Seed multiple jobs with different statuses\ncy.fixture('test-data').then(testData => {\n  cy.seedJobData(testData.testJobs);\n});\ncy.visitJobsApp('new');\ncy.waitForStore();\n// Instead of relying on a UI filter (migrated UI has no global #status-filter),\n// verify counts by inspecting rendered item cards and their status badges.\ncy.fixture('test-data').then(testData => {\n  const jobs = testData.testJobs;\n  const counts = jobs.reduce((acc, j) => {\n    acc[j.status] = (acc[j.status] || 0) + 1;\n    return acc;\n  }, {});\n  // Wait for cards to render\n  cy.get('.item-card').should('have.length', jobs.length);\n  // For each status in the fixture, assert the rendered badge count\n  Object.entries(counts).forEach(([status, expected]) => {\n    cy.get('.item-card').then(cards => {\n      const matchCount = [...cards].filter(c => {\n        var _c$querySelector2;\n        return ((_c$querySelector2 = c.querySelector(`.status-badge`)) === null || _c$querySelector2 === void 0 || (_c$querySelector2 = _c$querySelector2.textContent) === null || _c$querySelector2 === void 0 ? void 0 : _c$querySelector2.trim()) === status;\n      }).length;\n      expect(matchCount).to.equal(expected);\n    });\n  });\n});\ncy.takeNamedScreenshot('job-manager-filter-by-badge-counts');",
                  "err": {},
                  "uuid": "48f56dbe-3df5-45cc-bbb7-fa252849b81e",
                  "parentUUID": "df80dd96-2bc0-4c73-9d87-cabe6ee2cf87",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3b0e477d-fcc8-4482-b5cb-de1045a507ad",
                "48f56dbe-3df5-45cc-bbb7-fa252849b81e"
              ],
              "failures": [
                "d95d53c5-fde5-4142-b519-bacc4f072999"
              ],
              "pending": [],
              "skipped": [],
              "duration": 31835,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f3557555-aa86-4b1a-9779-fe3f322c396b",
              "title": "Resume Editor Component",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a new resume",
                  "fullTitle": "Component Functionality Tests Resume Editor Component should create a new resume",
                  "timedOut": null,
                  "duration": 9200,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Use migrated UI: navigate to resumes and click generic Add button\ncy.get('#section-title').should('contain.text', 'Resumes');\ncy.get('#add-item-btn').should('be.visible').click();\n// The form for 'resumes' will include a text field for the resume name\ncy.get('#form-modal').within(() => {\n  cy.get('form [name=\"name\"]').clear().type('Test User');\n  cy.get('#form-save').click();\n});\n// Verify resume was saved (card renderer .item-card used for resumes)\ncy.get('.item-card').should('contain.text', 'Test User');\ncy.takeNamedScreenshot('resume-editor-resume-saved');",
                  "err": {},
                  "uuid": "2175a6d3-9f4b-44ed-8172-255ec5577c4a",
                  "parentUUID": "f3557555-aa86-4b1a-9779-fe3f322c396b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add work experience (via seeded resume)",
                  "fullTitle": "Component Functionality Tests Resume Editor Component should add work experience (via seeded resume)",
                  "timedOut": null,
                  "duration": 20542,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "// Seed a resume that already includes work experience and verify it's rendered\ncy.fixture('test-data').then(testData => {\n  // Ensure the fixture's resume includes at least one work entry\n  const r = testData.testResumes[0];\n  if (!r.content) r.content = {};\n  if (!r.content.work || r.content.work.length === 0) {\n    r.content = r.content || {};\n    r.content.work = [{\n      name: 'Seeded Co',\n      position: 'Engineer',\n      startDate: '2020-01-01'\n    }];\n  }\n  cy.seedResumeData([r]);\n});\ncy.visitJobsApp('new');\ncy.waitForStore();\ncy.navigateToSection('resumes');\n// Open the resume and verify that work entries are shown in the resume card or details\ncy.get('.item-card').first().click();\ncy.get('.item-card').first().should('contain.text', 'Seeded Co');\ncy.takeNamedScreenshot('resume-editor-seeded-work');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 10000ms: expected '<div.item-card.active>' to contain text 'Seeded Co', but the text was '\\n        Untitled Resume\\n        Not modified\\n        \\n            \\n            \\n        \\n    \\n            \\n                1 work entries\\n            \\n        \\n        \\n            \\n                \\n            \\n            \\n                \\n            \\n        \\n    '",
                    "estack": "AssertionError: Timed out retrying after 10000ms: expected '<div.item-card.active>' to contain text 'Seeded Co', but the text was '\\n        Untitled Resume\\n        Not modified\\n        \\n            \\n            \\n        \\n    \\n            \\n                1 work entries\\n            \\n        \\n        \\n            \\n                \\n            \\n            \\n                \\n            \\n        \\n    '\n    at Context.eval (webpack://job-hunt-manager/./cypress/e2e/component-functionality.cy.js:134:35)",
                    "diff": "- '\\n        Untitled Resume\\n        Not modified\\n        \\n            \\n            \\n        \\n    \\n            \\n                1 work entries\\n            \\n        \\n        \\n            \\n                \\n            \\n            \\n                \\n            \\n        \\n    '\n+ 'Seeded Co'\n"
                  },
                  "uuid": "0579f872-088c-4514-9dca-ce2eff637e65",
                  "parentUUID": "f3557555-aa86-4b1a-9779-fe3f322c396b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2175a6d3-9f4b-44ed-8172-255ec5577c4a"
              ],
              "failures": [
                "0579f872-088c-4514-9dca-ce2eff637e65"
              ],
              "pending": [],
              "skipped": [],
              "duration": 29742,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2cdbbca7-22d2-4023-a4b9-4c72e1ab9185",
              "title": "Settings Manager Component",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should configure API keys",
                  "fullTitle": "Component Functionality Tests Settings Manager Component should configure API keys",
                  "timedOut": null,
                  "duration": 21732,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.waitForComponent('settings-manager-migrated');\n// Seed settings via global store in localStorage so component renders enabled inputs\ncy.window().then(win => {\n  const defaultState = JSON.parse(win.localStorage.getItem('global-store-state') || '{}');\n  defaultState.settings = defaultState.settings || {};\n  defaultState.settings.apiProviders = defaultState.settings.apiProviders || {};\n  defaultState.settings.apiProviders.claude = {\n    apiKey: 'test-claude-key',\n    model: 'claude-3-5-sonnet-20241022',\n    enabled: true\n  };\n  defaultState.settings.apiProviders.openai = {\n    apiKey: 'test-openai-key',\n    model: 'gpt-4o',\n    enabled: true\n  };\n  defaultState.settings.preferences = defaultState.settings.preferences || {};\n  defaultState.settings.preferences.theme = 'modern';\n  win.localStorage.setItem('global-store-state', JSON.stringify(defaultState));\n});\n// Re-render page state\ncy.reload();\ncy.waitForStore();\n// Interact with settings component now that values are present\ncy.get('settings-manager-migrated').shadow().within(() => {\n  cy.get('#claude-api-key').should('have.value', 'test-claude-key');\n  cy.get('#openai-api-key').should('have.value', 'test-openai-key');\n  cy.takeNamedScreenshot('settings-manager-api-keys');\n  // Test API connection for Claude (button should be enabled)\n  cy.get('[data-test-provider=\"claude\"]').click();\n  cy.get('#claude-test-result').should('exist');\n});\ncy.takeNamedScreenshot('settings-manager-api-test');",
                  "err": {
                    "message": "CypressError: Timed out retrying after 10050ms: `cy.click()` failed because this element is not visible:\n\n`<button class=\"btn btn-primary\" data-test-provider=\"claude\">Test Co...</button>`\n\nThis element `<button.btn.btn-primary>` is not visible because its parent `<div#settings-panel.settings-panel>` has CSS property: `display: none`\n\nFix this problem, or use `{force: true}` to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                    "estack": "CypressError: Timed out retrying after 10050ms: `cy.click()` failed because this element is not visible:\n\n`<button class=\"btn btn-primary\" data-test-provider=\"claude\">Test Co...</button>`\n\nThis element `<button.btn.btn-primary>` is not visible because its parent `<div#settings-panel.settings-panel>` has CSS property: `display: none`\n\nFix this problem, or use `{force: true}` to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at runVisibilityCheck (http://localhost:8080/__cypress/runner/cypress_runner.js:144957:58)\n    at Object.isStrictlyVisible (http://localhost:8080/__cypress/runner/cypress_runner.js:144971:10)\n    at runAllChecks (http://localhost:8080/__cypress/runner/cypress_runner.js:113271:26)\n    at retryActionability (http://localhost:8080/__cypress/runner/cypress_runner.js:113339:16)\n    at tryCatcher (http://localhost:8080/__cypress/runner/cypress_runner.js:1830:23)\n    at Promise.attempt.Promise.try (http://localhost:8080/__cypress/runner/cypress_runner.js:4338:29)\n    at whenStable (http://localhost:8080/__cypress/runner/cypress_runner.js:143744:68)\n    at <unknown> (http://localhost:8080/__cypress/runner/cypress_runner.js:143685:14)\n    at tryCatcher (http://localhost:8080/__cypress/runner/cypress_runner.js:1830:23)\n    at Promise._settlePromiseFromHandler (http://localhost:8080/__cypress/runner/cypress_runner.js:1542:31)\n    at Promise._settlePromise (http://localhost:8080/__cypress/runner/cypress_runner.js:1599:18)\n    at Promise._settlePromise0 (http://localhost:8080/__cypress/runner/cypress_runner.js:1644:10)\n    at Promise._settlePromises (http://localhost:8080/__cypress/runner/cypress_runner.js:1724:18)\n    at Promise._fulfill (http://localhost:8080/__cypress/runner/cypress_runner.js:1668:18)\n    at <unknown> (http://localhost:8080/__cypress/runner/cypress_runner.js:5473:46)\nFrom Your Spec Code:\n    at Context.eval (webpack://job-hunt-manager/./cypress/e2e/component-functionality.cy.js:170:48)",
                    "diff": null
                  },
                  "uuid": "decb7521-14c7-4736-b77f-298cd3860c5f",
                  "parentUUID": "2cdbbca7-22d2-4023-a4b9-4c72e1ab9185",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change theme settings",
                  "fullTitle": "Component Functionality Tests Settings Manager Component should change theme settings",
                  "timedOut": null,
                  "duration": 10357,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.waitForComponent('settings-manager-migrated');\n// Switch to Preferences tab inside the settings component, then change theme\ncy.get('settings-manager-migrated').shadow().within(() => {\n  cy.get('.tab-btn[data-tab=\"preferences\"]').click();\n  cy.get('#theme-select').should('exist');\n  cy.get('#theme-select').select('dark');\n  cy.takeNamedScreenshot('settings-manager-theme-dark');\n  // Ensure 'modern' option exists before selecting\n  cy.get('#theme-select').find('option').then(opts => {\n    const texts = [...opts].map(o => o.value || o.text);\n    if (texts.includes('modern') || texts.includes('Modern')) {\n      cy.get('#theme-select').select('modern');\n      cy.takeNamedScreenshot('settings-manager-theme-modern');\n    }\n  });\n});",
                  "err": {},
                  "uuid": "e1c729af-2dea-4f90-b130-471eced19683",
                  "parentUUID": "2cdbbca7-22d2-4023-a4b9-4c72e1ab9185",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e1c729af-2dea-4f90-b130-471eced19683"
              ],
              "failures": [
                "decb7521-14c7-4736-b77f-298cd3860c5f"
              ],
              "pending": [],
              "skipped": [],
              "duration": 32089,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4a885d00-dcf5-4512-92b3-d0d546d33b65",
              "title": "Global Store Component",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should maintain state across components",
                  "fullTitle": "Component Functionality Tests Global Store Component should maintain state across components",
                  "timedOut": null,
                  "duration": 19265,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Add a job via migrated generic Add button\ncy.get('#add-item-btn').click();\ncy.openModal('form-modal');\ncy.fixture('test-data').then(testData => {\n  const job = testData.formTestData.validJob;\n  cy.get('#form-modal').within(() => {\n    cy.get('form [name=\"company\"]').clear().type(job.company);\n    cy.get('form [name=\"position\"]').clear().type(job.position);\n    cy.get('form [name=\"location\"]').clear().type(job.location);\n  });\n  cy.get('#form-save').click();\n});\n// Navigate to different section and back\ncy.navigateToSection('resumes');\ncy.navigateToSection('jobs');\n// Verify job still exists (item cards)\ncy.get('.item-card').should('contain.text', 'Test Company');\ncy.takeNamedScreenshot('global-store-state-persistence');",
                  "err": {},
                  "uuid": "dea73236-f0a5-4033-a813-750d7c0c1c98",
                  "parentUUID": "4a885d00-dcf5-4512-92b3-d0d546d33b65",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle state updates across components",
                  "fullTitle": "Component Functionality Tests Global Store Component should handle state updates across components",
                  "timedOut": null,
                  "duration": 19973,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Seed test data\ncy.fixture('test-data').then(testData => {\n  cy.seedJobData([testData.testJobs[0]]);\n  cy.seedResumeData([testData.testResumes[0]]);\n});\ncy.visitJobsApp('new');\ncy.waitForStore();\n// Check initial statistics via item-card count\ncy.get('.item-card').should('have.length', 1);\n// Add another job via migrated UI\ncy.get('#add-item-btn').click();\ncy.openModal('form-modal');\ncy.fixture('test-data').then(testData => {\n  const job = testData.formTestData.validJob;\n  cy.get('#form-modal').within(() => {\n    cy.get('form [name=\"company\"]').clear().type(job.company + ' 2');\n    cy.get('form [name=\"position\"]').clear().type(job.position);\n    cy.get('form [name=\"location\"]').clear().type(job.location);\n    cy.get('#form-save').click();\n  });\n});\n// Verify statistics updated via item-card count\ncy.get('.item-card').should('have.length.greaterThan', 1);\ncy.takeNamedScreenshot('global-store-state-updates');",
                  "err": {},
                  "uuid": "6211d771-9093-45c3-ad2c-c29319fc5b72",
                  "parentUUID": "4a885d00-dcf5-4512-92b3-d0d546d33b65",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dea73236-f0a5-4033-a813-750d7c0c1c98",
                "6211d771-9093-45c3-ad2c-c29319fc5b72"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 39238,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "8b20ed88-fdce-48df-9db3-772001884691",
              "title": "Modal System",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should handle multiple modals",
                  "fullTitle": "Component Functionality Tests Modal System should handle multiple modals",
                  "timedOut": null,
                  "duration": 10541,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Open job modal via migrated UI\ncy.get('#add-item-btn').click();\ncy.openModal('form-modal');\ncy.takeNamedScreenshot('modal-system-job-modal');\ncy.closeModal('form-modal');\n// Open import job modal\ncy.get('#import-job-btn').click();\ncy.openModal('import-job-modal');\ncy.takeNamedScreenshot('modal-system-import-modal');\ncy.closeModal('import-job-modal');",
                  "err": {},
                  "uuid": "853ae27f-afc0-4ec8-b026-e6fe9689cea8",
                  "parentUUID": "8b20ed88-fdce-48df-9db3-772001884691",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle modal overlays properly",
                  "fullTitle": "Component Functionality Tests Modal System should handle modal overlays properly",
                  "timedOut": null,
                  "duration": 5392,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('#add-item-btn').click();\ncy.openModal('form-modal');\n// Check overlay behavior (backdrop) — click the active modal backdrop element\ncy.get('#form-modal').should('be.visible').click({\n  force: true\n});\n// Modal should close when clicking backdrop\ncy.get('#form-modal').should('have.class', 'hidden');\ncy.takeNamedScreenshot('modal-system-overlay-close');",
                  "err": {},
                  "uuid": "11f6a3ad-5dca-4ccd-9a1b-70dca07ce58c",
                  "parentUUID": "8b20ed88-fdce-48df-9db3-772001884691",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "853ae27f-afc0-4ec8-b026-e6fe9689cea8",
                "11f6a3ad-5dca-4ccd-9a1b-70dca07ce58c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15933,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "6.2.0"
    }
  }
}